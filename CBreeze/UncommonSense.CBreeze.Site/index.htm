<body>
	<div class="blue faq">
		<div class="container">
			<div class="text">
				<a name="faq">
					<h2>Frequently Asked Questions</h2>

					<h3>What do I need to be able to use C/Breeze?</h3>
					<p>What you need is a development or scripting environment that can work with .NET objects. Popular examples include: Microsoft
						Visual Studio (any edition), Xamarin Studio, Microsoft Windows PowerShell and ScriptCS. Simply reference the appropriate
						DLLs and you're good to go. If you have some experience in C/SIDE development, the concepts and hierarchy of C/Breeze
						should be familiar from the very start - they map directly to what you see in Microsoft Dynamics NAV's IDE.</p>

					<h3>Which NAV versions is C/Breeze designed for?</h3>
					<p>C/Breeze's object model is based on NAV 2013. We intend to further stabilise C/Breeze before adding any NAV 2013 R2
						features.
					</p>

					<h3>What else are you working on?</h3>
					<p>
						<ul>
							<li>The UncommonSense.CBreeze.Meta library will provide macros for common development scenarios, such as adding a number
								series based primary key to a table.</li>
							<li>The UncommonSense.CBreeze.Model library will allow developers and consultants to build a high-level model of an application,
								and render that model as a C/SIDE application.</li>
							<li>The UncommonSense.CBreeze.Fluent library will add a layer on top of C/Breeze Core that will make your application
								scripts
								<a href="http://en.wikipedia.org/wiki/Fluent_interface">fluent</a>, i.e. read (almost) like natural English.</li>
						</ul>
					</p>

					<h3>How is C/Breeze licensed?</h3>
					<p>For now, C/Breeze is licensed under the
						<a href="http://creativecommons.org/licenses/by-nc-nd/3.0/">Creative Commons Attribution-NonCommercial- NoDerivs 3.0 Unported</a> license. If that doesn't work for you, let me
						know via @uncommonsensenl on Twitter and we'll figure something out.</p>

					<h3>How can I contribute to the C/Breeze project?</h3>
					<p>If you feel your contribution, in whatever form, could make C/Breeze even better, our Twitter handle is
						<a href="https://twitter.com/uncommonsensenl">@uncommonsensenl</a>. Let's get in touch! :)</p>

					<h3>Who is this "we" behind C/Breeze?</h3>
					<p>Well, I guess "we" is really just "
						<a href="https://www.linkedin.com/in/jhoek">me</a>" :). Navision/Microsoft Dynamics NAV has been my job and hobby for a long time now, and the idea of a scripting
						API for building C/SIDE applications has been haunting my poor brain for many years. C/Breeze has had many incarnations
						during that time (in just as many programming languages) - none, however, as elegant, complete and definitive as this
						one.
					</p>

					<h3>When I let C/Breeze parse, then write, the W1 2013 application objects, the result is not 100% the same as the original
						file?
					</h3>
					<p>You're right, I noticed it, too. In C/Breeze, like in C/SIDE, each property type has a default value associated with
						it. If a property has that default value, it will
						<strong>not</strong> be included when writing the application objects. For most property types, that default value is
						<em>null</em>: if a string property's value is null, the property will be skipped when exporting the containing object.</p>
					<p>When I designed C/Breeze, I thought an empty collection would make a sensible default value for collection type properties,
						such as Permissions (which is a collection of Permission objects). However, it turns out that C/SIDE differentiaties
						between an uninitialized collection, and an empty collection.</p>
				</a>
			</div>
		</div>
	</div>

	<div class="copyright darkgray">
		<p>Copyright &copy; 2014 Jan Hoek. All trademarks and registered trademarks are the property of their respective owners.</p>
	</div>
	<script type="text/javascript">
		SyntaxHighlighter.all();
	</script>
</body>

</html>