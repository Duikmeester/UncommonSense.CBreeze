<#@ template debug="false" hostspecific="false" language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Reflection" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#@ output extension=".cs" #>
using System;
using UncommonSense.CBreeze.Core;

namespace UncommonSense.CBreeze.Utils
{
	public static class AutoCaptionExtensionMethods
	{
<#
	var cbreezeCore = Assembly.LoadFrom(@"C:\Users\jhoek\GitHub\UncommonSense.CBreeze\CBreeze\UncommonSense.CBreeze.Utils\bin\Debug\UncommonSense.CBreeze.Core.dll");
	var exportedTypes = cbreezeCore.ExportedTypes;
	var objectType = exportedTypes.First(t => t.FullName == "UncommonSense.CBreeze.Core.Object");
	var tableFieldType = exportedTypes.First(t => t.FullName == "UncommonSense.CBreeze.Core.TableField");

	foreach(var @type in exportedTypes.Where(t => t.IsSubclassOf(objectType) && t.Name != "Codeunit" && t.Name != "MenuSuite"))
	{ 
#>
		public static <#= @type.Name #> AutoCaption(this <#= @type.Name #> item)
		{
			item.Properties.CaptionML.Add("ENU", item.Name);
			return item;
		}

<# 
	}

	foreach(var @type in exportedTypes.Where(t => t.IsSubclassOf(tableFieldType)))
    {
#>
		public static <#= @type.Name #> AutoCaption(this <#= @type.Name #> item)
		{
			item.Properties.CaptionML.Add("ENU", item.Name);
			return item;
		}

<#
    }
#>

		public static OptionTableField AutoOptionCaption(this OptionTableField item)
		{
			item.Properties.OptionCaptionML.Add("ENU", item.Properties.OptionString);
			return item;
		}
	}
}