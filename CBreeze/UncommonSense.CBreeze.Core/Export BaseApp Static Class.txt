OBJECT Codeunit 50000 Export BaseApp Static Class
{
  OBJECT-PROPERTIES
  {
    Date=11-01-16;
    Time=20:21:35;
    Modified=Yes;
    Version List=;
  }
  PROPERTIES
  {
    OnRun=BEGIN
            WriteBaseApp;
            MESSAGE('Done.');
          END;

  }
  CODE
  {

    PROCEDURE WriteBaseApp@1000000000();
    VAR
      AllObj@1000000005 : Record 2000000038;
      CompilationUnit@1000000000 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.CompilationUnit";
      Namespace@1000000001 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Namespace";
      BaseAppClass@1000000002 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Class";
      TableIDsClass@1000000004 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Class";
      TableNamesClass@1000000008 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Class";
      PageIDsClass@1000000010 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Class";
      CodeunitIDsClass@1000000009 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Class";
      Constant@1000000006 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Constant";
      Visibility@1000000003 : DotNet "'UncommonSense.CSharp, Version=1.0.5716.17676, Culture=neutral, PublicKeyToken=null'.UncommonSense.CSharp.Visibility";
      NormalizedName@1000000007 : Text[30];
    BEGIN
      CompilationUnit := CompilationUnit.CompilationUnit();
      Namespace := Namespace.Namespace('UncommonSense.CBreeze.Core');
      BaseAppClass := BaseAppClass.Class(Visibility.Public, 'BaseApp', '');
      BaseAppClass.Static := TRUE;

      TableIDsClass := TableIDsClass.Class(Visibility.Public, 'TableIDs', '');
      TableIDsClass.Static := TRUE;

      TableNamesClass := TableNamesClass.Class(Visibility.Public, 'TableNames' ,'');
      TableNamesClass.Static := TRUE;

      PageIDsClass := PageIDsClass.Class(Visibility.Public, 'PageIDs', '');
      PageIDsClass.Static := TRUE;

      CodeunitIDsClass := CodeunitIDsClass.Class(Visibility.Public, 'CodeunitIDs', '');
      CodeunitIDsClass.Static := TRUE;

      AllObj.SETFILTER("Object ID", '<%1|>%2', 50000, 59999);
      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Table);

      IF AllObj.FINDSET THEN
        REPEAT
          NormalizedName := NormalizeName(AllObj."Object Name");
          Constant := Constant.Constant(Visibility.Public, NormalizedName, 'int', FORMAT(AllObj."Object ID"));
          TableIDsClass.Constants.Add(Constant);
          Constant := Constant.Constant(Visibility.Public, NormalizedName, 'string', STRSUBSTNO('@"%1"', AllObj."Object Name"));
          TableNamesClass.Constants.Add(Constant);
        UNTIL AllObj.NEXT = 0;

      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Page);

      IF AllObj.FINDSET THEN
        REPEAT
          NormalizedName := NormalizeName(AllObj."Object Name");
          Constant := Constant.Constant(Visibility.Public, NormalizedName, 'int', FORMAT(AllObj."Object ID"));
          PageIDsClass.Constants.Add(Constant);
        UNTIL AllObj.NEXT = 0;

      AllObj.SETRANGE("Object Type", AllObj."Object Type"::Codeunit);

      IF AllObj.FINDSET THEN
        REPEAT
          NormalizedName := NormalizeName(AllObj."Object Name");
          Constant := Constant.Constant(Visibility.Public, NormalizedName, 'int', FORMAT(AllObj."Object ID"));
          CodeunitIDsClass.Constants.Add(Constant);
        UNTIL AllObj.NEXT = 0;

      BaseAppClass.NestedClasses.Add(TableIDsClass);
      BaseAppClass.NestedClasses.Add(TableNamesClass);
      BaseAppClass.NestedClasses.Add(PageIDsClass);
      BaseAppClass.NestedClasses.Add(CodeunitIDsClass);
      Namespace.Types.Add(BaseAppClass);
      CompilationUnit.Namespaces.Add(Namespace);

      CompilationUnit.WriteTo('C:\Users\jhoek\Desktop\BaseApp.cs');
    END;

    PROCEDURE NormalizeName@1000000005(ObjectName@1000000000 : Text[30]) NormalizedName : Text[30];
    BEGIN
      ObjectName := CONVERTSTR(ObjectName, ' ', '_');
      EXIT(DELCHR(ObjectName, '=', '&()%./-+'));
    END;

    BEGIN
    END.
  }
}

