// --------------------------------------------------------------------------------
// <auto-generated>
//      This code was generated by a tool.
//
//      Changes to this file may cause incorrect behaviour and will be lost if
//      the code is regenerated.
// </auto-generated>
// --------------------------------------------------------------------------------

using System;
using System.Linq;
using System.Collections;
using System.Collections.Generic;

namespace UncommonSense.CBreeze.Core
{
	// Normally, names for derived types are formed by prefixing the base type
	// name with it's specialisation description, e.g. Parameter -> IntegerParameter.
	// In case of page actions, the base class would be called PageAction, from
	// which e.g. ContainerPageAction would be derived. However, that would make
	// normal page actions ActionPageAction. Instead we'll call the base class
	// PageActionBase, and the derived classes PageActionContainer, PageActionGroup
	// PageActionSeparator and PageAction.

	[Serializable]
	public abstract partial class PageActionBase : KeyedItem<int>, IHasName, IHasProperties
	{
		private Int32? indentationLevel;

		internal PageActionBase(Int32 id, Int32? indentationLevel)
		{
			ID = id;
			this.indentationLevel = indentationLevel;
		}

		public abstract PageActionBaseType Type
		{
			get;
		}

		public Int32? IndentationLevel
		{
			get
			{
				return this.indentationLevel;
			}
		}

		public abstract string GetName();

		public abstract Properties AllProperties
		{
			get;
		}
	}
}
